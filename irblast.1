.TH irblast 1 "Dec 30, 2018"

.
.
.
.SH NAME
irblast \- emit remote infrared codes via sound card

.
.
.
.SH SYNOLPSIS
.TP 8
.B irblast
[\fI-d audiodevice\fP]
[\fI-r rate\fP]
[\fI-f frequency\fP]
[\fI-n value\fP]
[\fI-s duration\fP]
[\fI-c percentage\fP]
[\fI-m factor\fP]
[\fI-b\fP]
[\fI-l\fP]
[\fI-e\fP]
\fIprotocol device subdevice function\fP
[\fItimes\fP
[\fIrepetitions\fP]]

.
.

.SH DESCRIPTION

Emit codes used by infrared remote control through an adapter connected to the
stereo out jack. These are small devices with a single infrared LED between the
left and right outputs: cathode(-) on left, anode(+) on right.

It may work, or only at close range, or not at all depending on the soundcard
and the device to be controlled. If it does not work:

.IP "  * " 4
raise volume as much as possible, for example with \fBalsamixer\fP(\fI1\fP):
select the soundcard with key F6, unmute with 'M', raise volume with key up
.IP "  * "
disable automute: in \fBalsamixer\fP(\fI1\fP), use key 'M' so that the automute
scale is muted, that is, it has MM on the bottom instead of 00
.IP "  * "
try with option \fI-r 48000\fP, then \fI-r 200000\fP possibly with \fI-f
38000\fP

.
.
.
.SH OPTIONS

.TP
.BI -d " audiodevice
the alsa audio device, preferably a direct hardware one like hw:0, hw:1, etc.
.TP
.BI -r " rate
the audio device is set at this sample rate; a good choice may be 48000, the
maximal sample rate of many sound cards; this has nothing to do with the
carrier frequency, which only depends on the protocol; however, when this
option is not given the sample rate is set at 1/3 of the carrier frequency
.TP
.BI -f " frequency
the carrier frequency; the default is 1/3 of the frequency dictacted by the
protocol, approximated to make the period an integer number of microseconds;
for example, it is 12820Hz for the NEC protocol, which normally runs at
38000Hz; see \fIIMPLEMENTATION AND LIMITATIONS\fP below for the rationale of
this choice; a value of 0 makes the signal unoscillated (remains on for the
required duration)
.TP
.BI -n " value
carrier off value; the carrier is realized by oscillating left and right output
in antiphase between their minimum and maximum values; switching the carrier
off could be realized by a zero signal on both channels, but some sound cards
are slow at coming back to activity after that; for this reason, silence is
realized by a small constant signal; its value is normally 10, but can be
changed by this option
.TP
.BI -s " duration
to make sure that the sound card is ready to emit the carrier, the program
starts with 80000 microseconds of silence (carrier off); this option changes
this duration
.TP
.BI -c " percentage
the duty cycle, from 0 to 100; some values are special: 1 is the minimal duty
cycle that produces some signal given the sample rate and the period; 99 is the
maximal non-constant duty cycle; 100 is the unoscillated signal, like \fI-f
0\fP; the default is 50
.TP
.BI -m " factor
scale time by \fIfactor\fP; this is intended for soundcards or devices with
imprecise clocks; for example: when the factor is one, everything is sent as
specified by the protocol; when it is two, all durations are doubled; when it
is an half, all durations are halved; these example factors are for
illustration only, a factor that makes sense is probably close to one, like
\fI0.99\fP or \fI1.01\fP
.TP
.B -b
disable time error balancing; this is the mechanism that attenuates timing
errors due to time quantization, and is used unless this option is given; the
problem time error balancing tries to solve is that the protocol may specify
durations that are not multiple of the duration of a sample, and are therefore
approximated to the closest multiple; especially for protocols involving many
intervals (e.g., NEC), these timing errors accumulate: signals may be squeezed
or stretched in time; to avoid this, the missing or excess time of an interval
is added to the next; this is mostly irrelevant to the duration of a single
interval, but makes the overall timing more accurate; however, it may make the
interval duration slightly uneven, which is why it can be disabled by this
option
.TP
.B -l
set the audio card parameters immediately, but then wait three seconds before
emitting the codes; this is for using a loopback audio device, unless setting
the same audio parameters at both ends of it
.TP
.B -e
mark the end of each code and the end of the initial silence with a short
negative pulse; this is only useful for testing with a loopback device in
conjunction with \fI-n 8000\fP, to check that everything is sent correctly
.TP
.B protocol
currently supported are: nec, nec2, sharp, sony20 and rc5
.TP
.B device
the address of the device to be controlled
.TP
.B subdevice
some protocols allow for a second part of the device address;
otherwise, this can be set to \fInone\fP
.TP
.B function
the key of the remote control to emulate
.TP
.B times
how may times the key is sent; default is one
.TP
.B repetitions
how many times the key is repeated; some protocols send different codes when
the key is held down, rather than raised and pressed again; default is zero
repetitions

non-zero repetitions are necessary for some protocols: the rc5 protocol
requires each key to be followed by at least a repetition, the sony protocol
that each key is sent thrice:

.nf
irblast -r 48000 rc5 $((0x05)) none $((0x02)) 1 1
irblast -r 48000 sony20 $((0x1A)) $((0x49)) $((0x15)) 3
.fi

.
.
.
.SH IMPLEMENTATION AND LIMITATIONS

Most soundcards have a 48000 maximum samplerate. They can generate exactly only
signals bounded by 24kHz. Most remotes have carrier frequency of 36kHz, 38kHz
or 40kHz.

This problem is overcome by producing a square wave at 1/3 of the carrier
frequency. Square waves have a component at 3 times their frequency.

However, soundcards are not guaranteed to generate such an output exactly; even
if they do, the component at 3 times the frequency has less power than the main
component. This means that the signal may control a device only at short range,
or not at all.

If the soundcard maximal samplerate is large enough for the protocol carrier
frequency, such a carrier can be generated by the \fI-f\fP switch. The
soundcard is then requested a samplerate that is double this frequency. If such
a samplerate is not be available, one may instead request an higher samplerate
by the \fI-r\fP switch. For example:

.nf
irblast -f 38000 nec 1 none 3            # request samplerate 38000*2
irblast -f 38000 -r 200000 nec 1 none 3  # request higher samplerate
.fi

.
.
.
.SH LOOPBACK AND MP3

The output signal is immediately sent to a soundcard, with no option for
redirecting to a file. However, the soundcard may be a virtual loopback device,
so that the output can be recorded. If the loopback device is numbered one (can
be checked with \fIaplay -l\fP):

.nf
modprobe snd-aloop
arecord -D hw:1,0 -f S16_LE -r 44100 -c 2 -t wav result.wav &
sleep 1
irblast -d hw:1,1 -r 44100
killall arecord
sox result.wav result.au remix 2
signal2pbm -i 20 -c result.au ; fbi output.png
remote -c result.au
.fi

Alternatively, \fIirblast\fP may be started first with option \fI-l\fP to make
it wait three seconds for the recording application to start. Since the first
program to open an end of the loopback device sets its parameters (samplerate,
number of channels, etc.), the recording application will use the parameters
set by \fIirblast\fP.

Since the generated signal is stereo, it needs to be converted to mono before
being passed to \fBsignal2pbm\fP(\fI1\fP) or \fBremote\fP(\fI1\fP).
Additionally, the latter program expects a signal that is made unoscillated by
the sound card low-pass filter; it needs the \fI-c\fP option to work on the
signal coming from the loopback audio device.

The wav audio file may work on an actual player or not, depending on the
player. If it does, the maximum range depends on the controlled device: may be
2m or 20cm. If the wav file is converted to mp3, changes like dithering and
compressing are to be avoided:

.nf
sox result.wav -D -C 0 result.mp3
mpv result.mp3         # or play from an mp3 reader or smartphone
.fi

.
.
.
.SH JACK DETECTION

Some soundcards disable their output when they electrically detect that nothing
is connected to the jack port. The infrared LED may fail this test because it
leaves ground unconnected, so that infinite impedance appears between left and
ground and between right and ground, as if nothing was connected.

Such a detection may be disabled via \fBalsamixer\fP(\fI1\fP), selecting the
sound card with key F6 and muting the "auto-mute" control if present with key
'm'. If this control is not present, the only solution is to connect the
infrared LED to an output of a splitter, and a real stereo device to the other.
A resistance of 100 Ohm between left and ground and an equal one between right
and ground may suffice (both are necessary).

.
.
.
.SH TODO

Implement the sony12 and sony15 protocols.

Raise volume before generating the audio signal.

