.TH irblast 1 "Dec 30, 2018"

.
.
.
.SH NAME
irblast \- emit remote infrared codes via an audio device

.
.
.
.SH SYNOLPSIS
.TP 8
.B irblast
[\fI-d audiodevice\fP]
[\fI-r rate\fP]
[\fI-f frequency\fP]
[\fI-u divisor\fP]
[\fI-k\fP]
[\fI-n value\fP]
[\fI-s duration\fP]
[\fI-c percentage\fP]
[\fI-g time\fP]
[\fI-t factor\fP]
[\fI-o factor\fP]
[\fI-v\fP]
[\fI-b\fP]
[\fI-l\fP]
[\fI-i\fP]
[\fI-z\fP]
[\fI-y percentage\fP]
[\fI-w\fP]
[\fI-e\fP]
\fIprotocol device subdevice function\fP
[\fItimes\fP
[\fIrepetitions\fP]]

.
.

.SH DESCRIPTION

Emit codes used by infrared remote control through an adapter connected to the
stereo out jack. These are small devices with a single infrared LED between the
left and right outputs: anode(+) on left, cathode(-) on right.

It may work, or only at close range, or not at all depending on the audio
device and the device to be controlled. If it does not work:

.IP "  * " 4
raise volume as much as possible, for example with \fBalsamixer\fP(\fI1\fP):
select the soundcard with key F6, unmute with 'M', raise volume with the cursor
up key
.IP "  * "
disable automute: in \fBalsamixer\fP(\fI1\fP), use key 'M' so that the automute
scale is muted, that is, it has MM on the bottom instead of 00
.IP "  * "
check whether the correct audio device is used with option \fI-d\fP
.IP "  * "
try changing the duty cycle: \fI-c 99\fP or \fI-c 1\fP
.IP "  * "
try increasing output power with \fI-z\fP
.IP "  * "
try using the maximum allowed frequency: \fI-k\fP

.
.
.
.SH OPTIONS

.TP
.BI -d " audiodevice
the alsa audio device, preferably a direct hardware one like hw:0, hw:1, etc.
.TP
.BI -r " rate
the audio device is set at this sample rate; the default is the highest support
rate
.TP
.BI -f " frequency
the carrier frequency in Hertz; the default depends on the protocol (for
example, 38000Hz for the NEC protocol); if the frequency is too high for the
sample rate, it is divided by 3, or by 5, or by 7, etc.; see \fIIMPLEMENTATION
AND LIMITATIONS\fP below for the reason why; a frequency of 0Hz makes the
signal unoscillated (remains on for the required duration of the carrier): this
may require option \fI-i\fP: see \fIHARDWARE\fP, below
.TP
.BI -u " divisor
divide the frequency dictated by the protocol by this amount; if the resulting
frequency is too high for the sample rate, use the largest possible frequency
allowed by the sample rate; amounts that make sense for the divisor are 3, 5,
7, etc.; the default 0 means to use the method described for option \fI-f\fP to
determine the divisor; see \fIIMPLEMENTATION AND LIMITATIONS\fP, below
.TP
.B -k
if the sample rate does not suffice to generate the frequency required by the
protocol, use the maximum frequency allowed by the sample rate; see
\fIIMPLEMENTATION AND LIMITATIONS\fP, below
.TP
.BI -n " value
carrier off value; the carrier is realized by oscillating left and right output
in antiphase between their minimum and maximum values; switching the carrier
off could be realized by a zero signal on both channels, but some sound cards
are slow at coming back to activity after that; for this reason, silence is
realized by a small constant signal; its value is normally 10, but can be
changed by this option
.TP
.BI -s " duration
to make sure that the sound card is ready to emit the carrier, the program
starts with 80000 microseconds of silence (carrier off); this option changes
this duration
.TP
.BI -c " percentage
the duty cycle, from 0 to 100, where 100 produces the same unoscillated signal
of \fI-f 0\fP; unless the duty cycle is 0 or 100, every period contains a
non-empty positive half and a non-empty negative half; the duty cycle
determines the proportion of their length; this option may require option
\fI-i\fP, see \fIHARDWARE\fP, below
.TP
.BI -g " time
start every carrier-on interval with a pulse of this length, in microseconds;
this is intended to compensate a latency of the audio device or the LED to turn
on
.TP
.BI -t " factor
scale time by \fIfactor\fP; this is intended for soundcards or devices with
imprecise clocks; for example: when the factor is one, everything is sent as
specified by the protocol; when it is two, all durations are doubled; when it
is an half, all durations are halved; these example factors are for
illustration only, a factor that makes sense is probably close to one, like
\fI0.99\fP or \fI1.01\fP; the carrier frequency is not affected by this option
.TP
.BI -o " factor
expand the carrier-on intervals by this factor; for example, if \fIfactor\fP is
\fI1.1\fP and the protocol has a 100 microseconds of carrier on and 100 of
carrier off, the result is 110 on and 100 off; this compensates a delay of the
LED in turning on; when \fIfactor\fP is less than one, the carrier on intervals
remain the same but the carrier off intervals are expanded by \fI1/factor\fP;
see also \fI-v\fP
.TP
.B -v
compensate the carrier-on expansion (option \fI-o\fP) by shortening the
carrier-off intervals; in the above example, the 100-100 intervals become
110-90 instead of 110-100; this option has no effect if \fI-b\fP is also passed
.TP
.B -b
disable time error balancing; this is the mechanism that attenuates timing
errors due to time quantization, and is used unless this option is given; the
problem time error balancing tries to solve is that the protocol may specify
durations that are not multiple of the duration of a sample, and are therefore
approximated to the closest multiple; especially for protocols involving many
intervals (e.g., NEC), these timing errors accumulate: signals may be squeezed
or stretched in time; to avoid this, the missing or excess time of an interval
is added to the next; this is mostly irrelevant to the duration of a single
interval, but makes the overall timing more accurate; however, it may make the
interval durations slightly uneven, which is why it can be disabled by this
option
.TP
.B -l
ensure that the carrier on intervals have at least the length dictated by the
protocol; if such an interval ends with the carrier off, it is prolonged until
the carrier is on again for at least a sample; this option may require option
\fI-i\fP: see \fIHARDWARE\fP, below
.TP
.B -i
invert left and right output; this is only relevant when using a duty cycle
other than the default 50%, a frequency of 0 or the carrier-on ensured length;
see \fIHARDWARE\fP, below, on whether to use this option or not
.TP
.B -z
attenuate the signal in carrier-off intervals; normally, the output is its
maximal negative value there; this option halven it; the result is a slight
increase in overall output power
.TP
.BI -y " percentage
reduce the value of the pulses following the first one in a burst
.TP
.B -w
set the audio card parameters immediately, but then wait three seconds before
emitting the codes; this is for using a loopback audio device, unless setting
the same audio parameters at both ends of it
.TP
.B -e
mark the end of each code and the end of the initial silence with a short
negative pulse; this is only useful for testing with a loopback device in
conjunction with \fI-n 8000\fP, to check that everything is sent correctly
.TP
.B -a
print an ascii representation of the output signal; every character represent
about twenty samples, so the length of the printing depends on the sampling
rate
.TP
.B protocol
currently supported are: nec, nec2, sharp, sony20 and rc5
.TP
.B device
the address of the device to be controlled
.TP
.B subdevice
some protocols allow for a second part of the device address;
otherwise, this is \fInone\fP
.TP
.B function
the key of the remote control to emulate
.TP
.B times
how may times the key is sent; default is one
.TP
.B repetitions
how many times the key is repeated; some protocols send different codes when
the key is held down, rather than raised and pressed again; default is zero
repetitions

non-zero repetitions are necessary for some protocols: the rc5 protocol
requires each key to be followed by at least a repetition, the sony protocol
that each key is sent thrice:

.nf
irblast rc5 $((0x05)) none $((0x02)) 1 1
irblast sony20 $((0x1A)) $((0x49)) $((0x15)) 3
.fi

.
.
.
.SH HARDWARE

The emitter is a 3.5 jack with a infrared LED connected between the left and
right channels. Whether anode anode(+) is on left and cathode(-) on right or
vice versa is usually irrelevant, as the program outputs signals that are
symmetric between the two channels: the carrier is an alternation of two
phases, where the first has maximal positive value on the right channel and
maximal negative value on the left channel and the second is the contrary.

The only cases when the direction of the LED counts is when setting a duty
cycle that is different than the default 50%, a frequency of 0Hz (which is the
same as a duty cycle of 100%), ensuring the length of the carrier-on periods or
using a reduced inversion. The direction can be established by \fIirblast test
2 none 0\fP. The infrared LED should flash twice. If it flashes once, the
direction is inverted, and option \fI-i\fP is necessary to take this into
account. To see the LED flashing a camera is necessary as the human eye does
not see infrared light; a mobile or webcam suffices.

If the LED does not flash at all, or only emits a very fleeble ligth, then
something may be wrong with the mixer. The volume may not be the highest
possible, or automuting is enabled (see also \fIJACK DETECTION\fP, below).

.
.
.
.SH JACK DETECTION

Some soundcards disable their output when they electrically detect that nothing
is connected to the jack port. The infrared LED may fail this test because it
leaves ground unconnected, so that infinite impedance is between left and
ground and between right and ground, as if nothing was connected.

Such a detection may be disabled via \fBalsamixer\fP(\fI1\fP), selecting the
sound card with key F6 and muting the "auto-mute" control if present by
pressing key 'm'. If this control is not present, the only solution is to
connect the infrared LED to an output of a splitter, and a real stereo device
to the other. A resistance of 100 Ohm between left and ground and an equal one
between right and ground may suffice (both are necessary).

.
.
.
.SH IMPLEMENTATION AND LIMITATIONS

Many audio devices have a 48000 maximum samplerate. They can generate exactly
only signals bounded by 24kHz. Most remotes have carrier frequency of 36kHz,
38kHz or 40kHz.

This problem is overcome by producing a square wave at 1/3 of the carrier
frequency. Square waves have a component at 3 times their frequency.

However, audio devices are not guaranteed to generate such an output exactly;
even if they do, the component at 3 times the frequency has less power than the
main component. This means that the signal may control a device only at short
range, or not at all.

If the audio device maximal samplerate is large enough for the protocol carrier
frequency, no division is done. In the same way, if a third of the frequency is
too large for the sample rate, the frequency is divided by five instead, since
square waves also have a component at five times their frequency. If this is
not enough, frequency is divided by seven, or nine, etc.

Another solution is to emit a carrier at the maximum frequency supported by the
audio device. Infrared receivers remove the frequencies different from their by
an analog band-pass filter, but analog filters do not completely erase
frequencies outside their band: part of the signal may still pass.

.
.
.
.SH LOOPBACK AND MP3

The output signal is immediately sent to an audio device, with no option for
redirecting to a file. However, the audio device may be a virtual loopback
device, so that the output can be recorded. If the loopback device is numbered
\fI1\fP (can be checked with \fIaplay -l\fP):

.nf
modprobe snd-aloop
arecord -D hw:1,0 -f S16_LE -r 44100 -c 2 -t wav result.wav &
sleep 1
irblast -d hw:1,1 -r 44100
killall arecord
sox result.wav result.au remix 1
signal2pbm -i 20 -p result.au ; fbi output.png
remote -c result.au
.fi

Alternatively, \fIirblast\fP may be started first with option \fI-l\fP to make
it wait three seconds for the recording application to start. Since the first
program to open an end of the loopback device sets its parameters (samplerate,
number of channels, etc.), the recording application will use the parameters
set by \fIirblast\fP.

Since the generated signal is stereo, it needs to be converted to mono before
being passed to \fBsignal2pbm\fP(\fI1\fP) or \fBremote\fP(\fI1\fP).
Additionally, the latter program expects a signal that is made unoscillated by
the sound card low-pass filter; it needs the \fI-c\fP option to work on the
signal coming from the loopback audio device.

The wav audio file may work on an actual player or not, depending on the
player. If it does, the maximum range depends on the controlled device: may be
2m or 20cm. If the wav file is converted to mp3, changes like dithering and
compressing are to be avoided:

.nf
sox result.wav -D -C 0 result.mp3
mpv result.mp3         # or play from an mp3 reader or smartphone
.fi

.
.
.
.SH TODO

Implement the sony12 and sony15 protocols.

Set maximum volume before generating the audio signal.
Save previous setting, restore on exit.

